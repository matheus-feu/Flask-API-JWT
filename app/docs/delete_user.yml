tags:
  - User

summary: "Deletar usuário"
description: "O ID do usuário que precisa ser deletado, localize o ID do usuário no endpoint de listar usuários."
operationId: "deleteUser"

produces:
  - "application/json"

parameters:
  - name: "ID"
    in: "path"
    description: "ID do usuário a ser deletado."
    required: true
    type: "integer"

responses:

  "200":
    description: "Usuário deletado"
    schema:
      example:
        {
          "data": {
            "email": "havokz.flask@email.com",
            "id": 2,
            "name": "matheus",
            "password": "pbkdf2:sha256:260000$04NNYdu2A6i5lcVQ$ce0d1f9520766e07a0d1188aa7916cf357e1974a772538d8fa821c4812a8d6f0",
            "username": "havokz"
          },
          "message": "Usuário havokz deletado com sucesso."
        }

  "401":
    description: "Não autorizado - O token JWT é inválido ou expirou"
    schema:
      example:
        {
          'message': 'Token is missing!'
        }

  "404":
    description: "ID não encontrado"
    schema:
      example:
        {
          "error": "O usuário que contém esse ID: 5 não existe."
        }


